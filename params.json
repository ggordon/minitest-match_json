{"name":"minitest-match_json","tagline":"Minitest comparer for JSON objects","body":"# Minitest::MatchJson\r\n\r\n[![Build Status](https://travis-ci.org/ggordon/minitest-match_json.svg?branch=master)](https://travis-ci.org/ggordon/minitest-match_json) [![Gem Version](https://badge.fury.io/rb/minitest-match_json.svg)](http://badge.fury.io/rb/minitest-match_json)\r\nCompare two JSON objects. If a String is passed in, it is expected to be valid JSON, any other type will be converted to json if possible.\r\n\r\n## Installation\r\n\r\nAdd this line to your application's Gemfile:\r\n\r\n```ruby\r\ngem 'minitest-match_json'\r\n```\r\n\r\nAnd then execute:\r\n\r\n    $ bundle\r\n\r\nOr install it yourself as:\r\n\r\n    $ gem install minitest-match_json\r\n\r\n## Usage\r\n\r\n```\r\nrequire 'minitest-match_json'\r\n```\r\n\r\n[Diffy](https://github.com/samg/diffy) is used to compared the two JSON objects. Options to control the output format and number of context lines to be displayed can be passed through to Diffy.\r\n\r\n```ruby\r\nMinitest::MatchJson.configure do |config|\r\n  config.format = :color\r\n  config.context = 1\r\nend\r\n```\r\n\r\n### Assert style\r\n```ruby\r\nassert_match_json expected_json, actual_json\r\n```\r\n\r\n### Spec style\r\n```ruby\r\nactual_json.must_match_json expected_json\r\n```\r\n\r\n## Contributing\r\n\r\n1. Fork it ( https://github.com/ggordon/minitest-match_json/fork )\r\n2. Create your feature branch (`git checkout -b my-new-feature`)\r\n3. Commit your changes (`git commit -am 'Add some feature'`)\r\n4. Push to the branch (`git push origin my-new-feature`)\r\n5. Create a new Pull Request","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}